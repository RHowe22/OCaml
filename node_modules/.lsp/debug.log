Hello from C:\Users\rob\.atom\packages\ide-reason\rls\rls-win32-1.4.1.exe
Previous log location: C:\Users\rob\AppData\Local\Temp\lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json", "globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"refmt":"refmt","lispRefmt":"lispRefmt","format_width":80,"autoRebuild":true,"per_value_codelens":false,"dependencies_codelens":false,"opens_codelens":false}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/OCaml64/home/rob/CSE305/2HW/printer.ml","languageId":"ocaml","version":1,"text":"(* printer definitions DO NOT MODIFY THESE *)\ntype printable = B of bool   | U |\n                 S of string | L of int list | P of printable * printable\n\nlet ex0 = B true\nlet ex1 = S \"Schrute bucks\"\nlet ex2 = U\nlet ex3 = L [1; 8; 5; 0; 3]\nlet ex4 = P (P (U, P (P (L [1; -5; 13], U), P (L [0], B true))), S \"Hello\")\nlet ex5 = P (P (B true, P (P (L [-21; 53; 12], S \"c\"), P (L [45], B false))), S \"Hello\")\nlet ex6 = P (P (U, P (P (L [15; -15; 213], S \"c\"), P (P (U, U), S \"false\"))), S \"Hello\")\nlet ex7 = P (S \"Stanley nickels\", L [1000000])\n\n(* Your code begins here *)\nlet rec count_u (p: printable) : int =\n    match p with\n    | U  -> 1\n    | P(x,y) -> (count_u x) + (count_u y)\n    | _ -> 0\n\nlet rec global_or (p : printable) : bool option =\n    match p with\n    | B b -> Some b\n    | P (x,y) -> (let left = global_or (x) in\n        let right = global_or (y) in\n        match (left, right) with\n        | (Some lval, Some rval) -> Some (lval || rval)\n        | (Some lval , None) -> Some lval\n        | (None, Some rval ) -> Some rval\n        | _ -> None)\n    | _ -> None\nlet rec f_on_int_list (f : int-> int) (p : printable) : printable =\n  match p with\n  | L ls -> L (List.map f ls)\n  | P (x,y) -> P(f_on_int_list(f)(x), f_on_int_list(f)(y))\n  | B b -> B b\n  | U -> U\n  | S s -> S s\n\nlet rec sum_all_ints (p : printable) : int option =\n  match p with\n  | L ls -> (let rec sum lis =\n      match lis with\n      | [] -> None\n      | hd::tl ->(  match (sum tl) with\n          | Some tlval -> Some(tlval+hd)\n          | None -> Some(hd) )\n      in sum ls\n          )\n  | P (x,y) -> (let left =sum_all_ints(x) in\n      let right = sum_all_ints(y) in\n      match (left ,right) with\n      | (Some lval, Some rval) -> Some (lval + rval)\n      | (Some lval , None) -> Some lval\n      | (None, Some rval ) -> Some rval\n      | _ -> None)\n  | _ -> None\n\nlet rec tostring (p : printable) : string =\n  match p with\n  | B b -> string_of_bool b\n  | S s -> s\n  | U -> \"U\"\n  | P (x,y) -> (tostring(x))^(tostring(y))\n  | L ls ->( let rec string_of_intlist lis =\n      match lis with\n      | [] -> \"\"\n      | hd::tl-> (string_of_int hd)^(string_of_intlist tl) in\n      string_of_intlist ls\n)\nlet l = [ex0;ex1;ex2;ex3;ex4;ex5;ex6;ex7]\n\nlet rec test ls =\n    match ls with\n    |[] -> ()\n    |hd::tl ->print_string ((tostring hd)^\"\\n\"); test tl\n;;\ntest l\n"}}}
